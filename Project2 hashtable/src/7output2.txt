Enter informationProcessing method 
input is:   +	Mohammad
index for data is:  5
linked list before insertion: 
HashTable[5]: (dummy,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[5]: (dummy,Mohammad)--->(Mohammad,NULL)

 
input is:   +	Diego
index for data is:  5
linked list before insertion: 
HashTable[5]: (dummy,Mohammad)--->(Mohammad,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[5]: (dummy,Diego)--->(Diego,Mohammad)--->(Mohammad,NULL)

 
input is:   +	Daniel
index for data is:  6
linked list before insertion: 
HashTable[6]: (dummy,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[6]: (dummy,Daniel)--->(Daniel,NULL)

 
input is:   +	Alex
index for data is:  4
linked list before insertion: 
HashTable[4]: (dummy,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[4]: (dummy,Alex)--->(Alex,NULL)

 
input is:   +	AlAmin
index for data is:  4
linked list before insertion: 
HashTable[4]: (dummy,Alex)--->(Alex,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[4]: (dummy,AlAmin)--->(AlAmin,Alex)--->(Alex,NULL)

 
input is:   ?	AlAmin
index for data is:  4
linked list before insertion: 
HashTable[4]: (dummy,AlAmin)--->(AlAmin,Alex)--->(Alex,NULL)
** Inside hashRetrieval. Performing hashRetrieval 
Yes, the record is in the database! 

 
input is:   -	AlAmin
index for data is:  4
linked list before insertion: 
HashTable[4]: (dummy,AlAmin)--->(AlAmin,Alex)--->(Alex,NULL)
** Inside hashDelete method. Performing hashDelete  
After hashDelete operation ... 
HashTable[4]: (dummy,Alex)--->(Alex,NULL)

 
input is:   ?	AlAmin
index for data is:  4
linked list before insertion: 
HashTable[4]: (dummy,Alex)--->(Alex,NULL)
** Inside hashRetrieval. Performing hashRetrieval 
*** Warning, the record is *not* in the database! 

 
input is:   +	Cole
index for data is:  0
linked list before insertion: 
HashTable[0]: (dummy,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[0]: (dummy,Cole)--->(Cole,NULL)

 
input is:   +	Jia
index for data is:  1
linked list before insertion: 
HashTable[1]: (dummy,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[1]: (dummy,Jia)--->(Jia,NULL)

 
input is:   +	Liwen
index for data is:  1
linked list before insertion: 
HashTable[1]: (dummy,Jia)--->(Jia,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[1]: (dummy,Jia)--->(Jia,Liwen)--->(Liwen,NULL)

 
input is:   +	Jesse
index for data is:  0
linked list before insertion: 
HashTable[0]: (dummy,Cole)--->(Cole,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[0]: (dummy,Cole)--->(Cole,Jesse)--->(Jesse,NULL)

 
input is:   ?	Jesse
index for data is:  0
linked list before insertion: 
HashTable[0]: (dummy,Cole)--->(Cole,Jesse)--->(Jesse,NULL)
** Inside hashRetrieval. Performing hashRetrieval 
Yes, the record is in the database! 

 
input is:   -	Jesse
index for data is:  0
linked list before insertion: 
HashTable[0]: (dummy,Cole)--->(Cole,Jesse)--->(Jesse,NULL)
** Inside hashDelete method. Performing hashDelete  
After hashDelete operation ... 
HashTable[0]: (dummy,Cole)--->(Cole,NULL)

 
input is:   +	Jesse
index for data is:  0
linked list before insertion: 
HashTable[0]: (dummy,Cole)--->(Cole,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[0]: (dummy,Cole)--->(Cole,Jesse)--->(Jesse,NULL)

 
input is:   +	Ning
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[2]: (dummy,Ning)--->(Ning,NULL)

 
input is:   ?	Ning
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Ning)--->(Ning,NULL)
** Inside hashRetrieval. Performing hashRetrieval 
Yes, the record is in the database! 

 
input is:   +	Asadbek
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[3]: (dummy,Asadbek)--->(Asadbek,NULL)

 
input is:   -	Asadbek
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,Asadbek)--->(Asadbek,NULL)
** Inside hashDelete method. Performing hashDelete  
After hashDelete operation ... 
HashTable[3]: (dummy,NULL)

 
input is:   -	Asadbek
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,NULL)
** Inside hashDelete method. Performing hashDelete  
*** Warning: data is *not* in the database! 

 
input is:   *	Asadbek
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,NULL)
* is an unrecognizable operation!

 
input is:   +	Jesrhythm
index for data is:  6
linked list before insertion: 
HashTable[6]: (dummy,Daniel)--->(Daniel,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[6]: (dummy,Daniel)--->(Daniel,Jesrhythm)--->(Jesrhythm,NULL)

 
input is:   -	Ning
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Ning)--->(Ning,NULL)
** Inside hashDelete method. Performing hashDelete  
After hashDelete operation ... 
HashTable[2]: (dummy,NULL)

 
input is:   +	Ryan
index for data is:  0
linked list before insertion: 
HashTable[0]: (dummy,Cole)--->(Cole,Jesse)--->(Jesse,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[0]: (dummy,Cole)--->(Cole,Jesse)--->(Jesse,Ryan)--->(Ryan,NULL)

 
input is:   +	Asadbek
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[3]: (dummy,Asadbek)--->(Asadbek,NULL)

 
input is:   +	Tsering
index for data is:  0
linked list before insertion: 
HashTable[0]: (dummy,Cole)--->(Cole,Jesse)--->(Jesse,Ryan)--->(Ryan,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[0]: (dummy,Cole)--->(Cole,Jesse)--->(Jesse,Ryan)--->(Ryan,Tsering)--->(Tsering,NULL)

 
input is:   +	Tshetrim
index for data is:  6
linked list before insertion: 
HashTable[6]: (dummy,Daniel)--->(Daniel,Jesrhythm)--->(Jesrhythm,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[6]: (dummy,Daniel)--->(Daniel,Jesrhythm)--->(Jesrhythm,Tshetrim)--->(Tshetrim,NULL)

 
input is:   +	Yiqing
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[2]: (dummy,Yiqing)--->(Yiqing,NULL)

 
input is:   -	Asadbek
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,Asadbek)--->(Asadbek,NULL)
** Inside hashDelete method. Performing hashDelete  
After hashDelete operation ... 
HashTable[3]: (dummy,NULL)

 
input is:   +	Manana
index for data is:  5
linked list before insertion: 
HashTable[5]: (dummy,Diego)--->(Diego,Mohammad)--->(Mohammad,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,NULL)

 
input is:   +	Ivan
index for data is:  6
linked list before insertion: 
HashTable[6]: (dummy,Daniel)--->(Daniel,Jesrhythm)--->(Jesrhythm,Tshetrim)--->(Tshetrim,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[6]: (dummy,Daniel)--->(Daniel,Ivan)--->(Ivan,Jesrhythm)--->(Jesrhythm,Tshetrim)--->(Tshetrim,NULL)

 
input is:   +	Tania
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[3]: (dummy,Tania)--->(Tania,NULL)

 
input is:   %	Aniss
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Yiqing)--->(Yiqing,NULL)
% is an unrecognizable operation!

 
input is:   ?	Erik
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Yiqing)--->(Yiqing,NULL)
** Inside hashRetrieval. Performing hashRetrieval 
*** Warning, the record is *not* in the database! 

 
input is:   +	Erik
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Yiqing)--->(Yiqing,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[2]: (dummy,Erik)--->(Erik,Yiqing)--->(Yiqing,NULL)

 
input is:   -	Erik
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Erik)--->(Erik,Yiqing)--->(Yiqing,NULL)
** Inside hashDelete method. Performing hashDelete  
After hashDelete operation ... 
HashTable[2]: (dummy,Yiqing)--->(Yiqing,NULL)

 
input is:   ?	Erik
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Yiqing)--->(Yiqing,NULL)
** Inside hashRetrieval. Performing hashRetrieval 
*** Warning, the record is *not* in the database! 

 
input is:   +	Kevin
index for data is:  0
linked list before insertion: 
HashTable[0]: (dummy,Cole)--->(Cole,Jesse)--->(Jesse,Ryan)--->(Ryan,Tsering)--->(Tsering,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[0]: (dummy,Cole)--->(Cole,Jesse)--->(Jesse,Kevin)--->(Kevin,Ryan)--->(Ryan,Tsering)--->(Tsering,NULL)

 
input is:   +	Arben
index for data is:  1
linked list before insertion: 
HashTable[1]: (dummy,Jia)--->(Jia,Liwen)--->(Liwen,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[1]: (dummy,Arben)--->(Arben,Jia)--->(Jia,Liwen)--->(Liwen,NULL)

 
input is:   +	David
index for data is:  0
linked list before insertion: 
HashTable[0]: (dummy,Cole)--->(Cole,Jesse)--->(Jesse,Kevin)--->(Kevin,Ryan)--->(Ryan,Tsering)--->(Tsering,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[0]: (dummy,Cole)--->(Cole,David)--->(David,Jesse)--->(Jesse,Kevin)--->(Kevin,Ryan)--->(Ryan,Tsering)--->(Tsering,NULL)

 
input is:   +	Benjamin
index for data is:  1
linked list before insertion: 
HashTable[1]: (dummy,Arben)--->(Arben,Jia)--->(Jia,Liwen)--->(Liwen,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[1]: (dummy,Arben)--->(Arben,Benjamin)--->(Benjamin,Jia)--->(Jia,Liwen)--->(Liwen,NULL)

 
input is:   -	Fahim
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,Tania)--->(Tania,NULL)
** Inside hashDelete method. Performing hashDelete  
*** Warning: data is *not* in the database! 

 
input is:   +	Hengtuo
index for data is:  1
linked list before insertion: 
HashTable[1]: (dummy,Arben)--->(Arben,Benjamin)--->(Benjamin,Jia)--->(Jia,Liwen)--->(Liwen,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[1]: (dummy,Arben)--->(Arben,Benjamin)--->(Benjamin,Hengtuo)--->(Hengtuo,Jia)--->(Jia,Liwen)--->(Liwen,NULL)

 
input is:   +	Siliang
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,Tania)--->(Tania,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[3]: (dummy,Siliang)--->(Siliang,Tania)--->(Tania,NULL)

 
input is:   +	Seungwon
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Yiqing)--->(Yiqing,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[2]: (dummy,Seungwon)--->(Seungwon,Yiqing)--->(Yiqing,NULL)

 
input is:   ?	Yahav
index for data is:  0
linked list before insertion: 
HashTable[0]: (dummy,Cole)--->(Cole,David)--->(David,Jesse)--->(Jesse,Kevin)--->(Kevin,Ryan)--->(Ryan,Tsering)--->(Tsering,NULL)
** Inside hashRetrieval. Performing hashRetrieval 
*** Warning, the record is *not* in the database! 

 
input is:   +	Jurgen
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Seungwon)--->(Seungwon,Yiqing)--->(Yiqing,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[2]: (dummy,Jurgen)--->(Jurgen,Seungwon)--->(Seungwon,Yiqing)--->(Yiqing,NULL)

 
input is:   -	Gildian
index for data is:  6
linked list before insertion: 
HashTable[6]: (dummy,Daniel)--->(Daniel,Ivan)--->(Ivan,Jesrhythm)--->(Jesrhythm,Tshetrim)--->(Tshetrim,NULL)
** Inside hashDelete method. Performing hashDelete  
*** Warning: data is *not* in the database! 

 
input is:   ?	Seong
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,Siliang)--->(Siliang,Tania)--->(Tania,NULL)
** Inside hashRetrieval. Performing hashRetrieval 
*** Warning, the record is *not* in the database! 

 
input is:   #	Auyon
index for data is:  6
linked list before insertion: 
HashTable[6]: (dummy,Daniel)--->(Daniel,Ivan)--->(Ivan,Jesrhythm)--->(Jesrhythm,Tshetrim)--->(Tshetrim,NULL)
# is an unrecognizable operation!

 
input is:   +	Frederick
index for data is:  1
linked list before insertion: 
HashTable[1]: (dummy,Arben)--->(Arben,Benjamin)--->(Benjamin,Hengtuo)--->(Hengtuo,Jia)--->(Jia,Liwen)--->(Liwen,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[1]: (dummy,Arben)--->(Arben,Benjamin)--->(Benjamin,Frederick)--->(Frederick,Hengtuo)--->(Hengtuo,Jia)--->(Jia,Liwen)--->(Liwen,NULL)

 
input is:   +	Aviraj
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Jurgen)--->(Jurgen,Seungwon)--->(Seungwon,Yiqing)--->(Yiqing,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[2]: (dummy,Aviraj)--->(Aviraj,Jurgen)--->(Jurgen,Seungwon)--->(Seungwon,Yiqing)--->(Yiqing,NULL)

 
input is:   +	Shaxzod
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Aviraj)--->(Aviraj,Jurgen)--->(Jurgen,Seungwon)--->(Seungwon,Yiqing)--->(Yiqing,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[2]: (dummy,Aviraj)--->(Aviraj,Jurgen)--->(Jurgen,Seungwon)--->(Seungwon,Shaxzod)--->(Shaxzod,Yiqing)--->(Yiqing,NULL)

 
input is:   -	Imran
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Aviraj)--->(Aviraj,Jurgen)--->(Jurgen,Seungwon)--->(Seungwon,Shaxzod)--->(Shaxzod,Yiqing)--->(Yiqing,NULL)
** Inside hashDelete method. Performing hashDelete  
*** Warning: data is *not* in the database! 

 
input is:   +	Zai
index for data is:  2
linked list before insertion: 
HashTable[2]: (dummy,Aviraj)--->(Aviraj,Jurgen)--->(Jurgen,Seungwon)--->(Seungwon,Shaxzod)--->(Shaxzod,Yiqing)--->(Yiqing,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[2]: (dummy,Aviraj)--->(Aviraj,Jurgen)--->(Jurgen,Seungwon)--->(Seungwon,Shaxzod)--->(Shaxzod,Yiqing)--->(Yiqing,Zai)--->(Zai,NULL)

 
input is:   ?	Jonathan
index for data is:  5
linked list before insertion: 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,NULL)
** Inside hashRetrieval. Performing hashRetrieval 
*** Warning, the record is *not* in the database! 

 
input is:   +	Sean
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,Siliang)--->(Siliang,Tania)--->(Tania,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[3]: (dummy,Sean)--->(Sean,Siliang)--->(Siliang,Tania)--->(Tania,NULL)

 
input is:   -	Brandon
index for data is:  3
linked list before insertion: 
HashTable[3]: (dummy,Sean)--->(Sean,Siliang)--->(Siliang,Tania)--->(Tania,NULL)
** Inside hashDelete method. Performing hashDelete  
*** Warning: data is *not* in the database! 

 
input is:   ?	Juan
index for data is:  5
linked list before insertion: 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,NULL)
** Inside hashRetrieval. Performing hashRetrieval 
*** Warning, the record is *not* in the database! 

 
input is:   +	Steven
index for data is:  5
linked list before insertion: 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,Steven)--->(Steven,NULL)

 
input is:   +	Tim
index for data is:  5
linked list before insertion: 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,Steven)--->(Steven,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,Steven)--->(Steven,Tim)--->(Tim,NULL)

 
input is:   +	Matthew
index for data is:  4
linked list before insertion: 
HashTable[4]: (dummy,Alex)--->(Alex,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[4]: (dummy,Alex)--->(Alex,Matthew)--->(Matthew,NULL)

 
input is:   +	Natasha
index for data is:  5
linked list before insertion: 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,Steven)--->(Steven,Tim)--->(Tim,NULL)
*** Inside hashInsert method. Performing hashInsert 
After hashInsert operation ... 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,Natasha)--->(Natasha,Steven)--->(Steven,Tim)--->(Tim,NULL)

 
input is:   -	Natasha
index for data is:  5
linked list before insertion: 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,Natasha)--->(Natasha,Steven)--->(Steven,Tim)--->(Tim,NULL)
** Inside hashDelete method. Performing hashDelete  
After hashDelete operation ... 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,Steven)--->(Steven,Tim)--->(Tim,NULL)

 
input is:   ?	Natasha
index for data is:  5
linked list before insertion: 
HashTable[5]: (dummy,Diego)--->(Diego,Manana)--->(Manana,Mohammad)--->(Mohammad,Steven)--->(Steven,Tim)--->(Tim,NULL)
** Inside hashRetrieval. Performing hashRetrieval 
*** Warning, the record is *not* in the database! 

 
